{"version":3,"sources":["../src/utils.js"],"names":["opts","caller","callerContract","deployed","methodName","methodArgs","result","matchingLog","requireEventFromTXResult","eventName","resultContract","args","eventArgName","at","sendTransactionAndGetResult","normalizeWeb3Args","wrapWeb3Function","promisify","promisifyAll","makeWeb3Compatible","value","type","argName","Error","match","exec","length","Number","map","v","address","test","bytesLength","startsWith","signed","numBits","valueOf","slice","toString","getOptsFromArgs","getTruffleArgsFromOptions","argInfo","argAliases","name","alias","Decimal","clone","precision","functionInputs","defaults","methodOpts","forEach","i","join","getWeb3CallMetadata","speccedOpts","callerABI","validators","abi","functionCandidates","filter","console","warn","pop","inputs","validator","push","spec","wrappedFn","estimateGas","using","gasStats","averageGasUsed","matchingLogs","logs","l","event","tx","fn","Proxy","apply","target","thisArg","resolve","reject","newArgs","err","obj","fnName","asyncFnName"],"mappings":"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","file":"utils.js","sourcesContent":["import _ from 'lodash'\nimport DecimalJS from 'decimal.js'\n\nfunction makeWeb3Compatible(value, type, argName) {\n    if(type == null) {\n        throw new Error(`type must be specified for argument ${argName}`)\n    }\n\n    let match = /^(.*)\\[(\\d*)\\]$/.exec(type)\n    if(match != null) {\n        if(!_.isArray(value)) {\n            throw new Error(`expected ${value} to be convertable to ${type} ${argName}`)\n        }\n\n        if(match[2] !== '' && value.length !== Number(match[2])) {\n            throw new Error(`${value} has ${value.length} items but should be ${type} ${argName}`)\n        }\n\n        return value.map((v) => makeWeb3Compatible(v, match[1], argName))\n    }\n\n    if(type === 'address') {\n        // if it quacks like a TruffleContract\n        if (_.has(value, 'address')) {\n            value = value.address\n        }\n\n        if(!_.isString(value)) {\n            throw new Error(`${value} must be string for ${type} ${argName}`)\n        }\n\n        if(!/^(0x)?[0-9a-f]{40}$/i.test(value)) {\n            throw new Error(`${value} has wrong format for ${type} ${argName}`)\n        }\n\n        return value\n    }\n\n    if(type === 'bool') {\n        if(!_.isBoolean(value)) {\n            throw new Error(`expected ${value} to be a bool for ${type} ${argName}`)\n        }\n\n        return value\n    }\n\n    if(type === 'bytes' || type === 'string') {\n        if(_.isString(value)) {\n            return value\n        }\n\n        throw new Error(`could not format ${value} for ${type} ${argName}`)\n    }\n\n    match = /^bytes(\\d+)$/.exec(type)\n    if(match != null) {\n        let bytesLength = Number(match[1])\n        if(bytesLength > 32 || bytesLength === 0 || match[1].startsWith('0')) {\n            throw new Error(`invalid type ${type} specified for ${argName}`)\n        }\n\n        if(_.isString(value)) {\n            // TODO: refine this check to account for things like '\\uACDC'.length\n            if(value.length > bytesLength) {\n                throw new Error(`value ${value} too long for ${type} ${argName}`)\n            }\n            return value\n        }\n\n        throw new Error(`could not format ${value} for ${type} ${argName}`)\n    }\n\n    match = /^(u?)int(\\d+)$/.exec(type)\n    if(match != null) {\n        let signed = match[1] === ''\n        let numBits = Number(match[2])\n        if(numBits % 8 !== 0) {\n            throw new Error(`number of bits for ${type} ${argName} not divisible by 8`)\n        }\n\n        if(numBits > 256) {\n            throw new Error(`number of bits for ${type} ${argName} is too large`)\n        }\n\n        value = value.valueOf()\n\n        if(_.isString(value) && /^-?(0x[\\da-f]+|\\d+)$/i.test(value) || _.isNumber(value)) {\n            if(\n                _.isString(value) && value.startsWith('0x') &&\n                value.slice(2) === Number(value).toString(16) ||\n                value == Number(value).toString()\n            ) {\n                value = Number(value)\n            }\n\n            if(!signed && value.toString().startsWith('-')) {\n                throw new Error(`cannot pass negative value ${value} for ${type} ${argName}`)\n            }\n\n            return value\n        }\n\n        throw new Error(`could not normalize ${value} for ${type} ${argName}`)\n    }\n\n    throw new Error(`unsupported type ${type} for ${argName}`)\n}\n\nfunction getOptsFromArgs(args) {\n    return typeof args[args.length - 1] === 'object' ? args[args.length - 1] : {}\n}\n\nfunction getTruffleArgsFromOptions (argInfo, opts, argAliases) {\n    opts = opts == null ? {} : _.clone(opts)\n\n    if(argAliases != null) {\n        _.forOwn(argAliases, (name, alias) => {\n            if(_.has(opts, alias)) {\n                if(_.has(opts, name)) {\n                    throw new Error(`both name ${name} and its alias ${alias} specified in ${opts}`)\n                }\n                opts[name] = opts[alias]\n                delete opts[alias]\n            }\n        })\n    }\n\n    return argInfo.map(({ name, type }) => {\n        if (!_.has(opts, name)) {\n            throw new Error(`missing argument ${name}`)\n        }\n        return makeWeb3Compatible(opts[name], type, name)\n    })\n}\n\nexport let Decimal = DecimalJS.clone({ precision: 80 })\n\nexport function normalizeWeb3Args(args, opts) {\n    let {\n        functionInputs, methodName, argAliases, defaults\n    } = opts\n\n    // Format arguments in a way that web3 likes\n    let methodArgs, methodOpts\n    if(functionInputs.length === 1 && args.length === 1) {\n        // if there is one input, user could have supplied either the argument with no options\n        // or the argument inside of an options object\n        if(typeof args[0] === 'object' && _.has(args[0], functionInputs[0].name)) {\n            // we consider argument to be an options object if it has the parameter name as a key on it\n            methodOpts = _.defaults(_.clone(args[0]), defaults)\n            methodArgs = getTruffleArgsFromOptions(functionInputs, methodOpts, argAliases)\n            functionInputs.forEach(({ name }) => { delete methodOpts[name] })\n        } else {\n            methodOpts = null\n            methodArgs = functionInputs.map(({ name, type }, i) => makeWeb3Compatible(args[i], type, name))\n        }\n    } else if(functionInputs.length === args.length) {\n        methodOpts = null\n        methodArgs = functionInputs.map(({ name, type }, i) => makeWeb3Compatible(args[i], type, name))\n    } else if(functionInputs.length + 1 === args.length && typeof args[functionInputs.length] === 'object') {\n        methodOpts = args[args.length - 1]\n        // this map should not hit the last element of args\n        methodArgs = functionInputs.map(({ name, type }, i) => makeWeb3Compatible(args[i], type, name))\n    } else if(args.length === 1 && typeof args[0] === 'object') {\n        methodOpts = _.defaults(_.clone(args[0]), defaults)\n        methodArgs = getTruffleArgsFromOptions(functionInputs, methodOpts, argAliases)\n        functionInputs.forEach(({ name }) => { delete methodOpts[name] })\n    } else {\n        throw new Error(`${methodName}(${\n            functionInputs.map(({ name, type }) => `${type} ${name}`).join(', ')\n        }) can't be called with args (${args.join(', ')})`)\n    }\n\n    return [methodArgs, methodOpts]\n}\n\nfunction getWeb3CallMetadata(args, opts, speccedOpts) {\n    let {\n        callerContract, callerABI, methodName,\n        eventName, eventArgName, resultContract,\n        argAliases, validators\n    } = speccedOpts\n\n    if(callerABI == null) {\n        callerABI = callerContract.abi\n    }\n\n    const functionCandidates = callerABI.filter(({ name }) => name === methodName)\n\n    if(functionCandidates.length === 0) {\n        throw new Error(`could not find function ${methodName} in abi ${callerABI}`)\n    } else if(functionCandidates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(`function ${methodName} has multiple candidates in abi ${callerABI} -- using last candidate`)\n    }\n\n    const functionInputs = functionCandidates.pop().inputs\n\n    let [methodArgs, methodOpts] = normalizeWeb3Args(args, { functionInputs, methodName, argAliases })\n\n    if(validators != null) {\n        validators.forEach((validator) => { validator(methodArgs) })\n    }\n\n    // Pass extra options down to the web3 layer\n    if(methodOpts != null) {\n        methodArgs.push(methodOpts)\n    }\n\n    return {\n        callerContract, methodName, methodArgs,\n        eventName, eventArgName, resultContract,\n    }\n}\n\nexport function wrapWeb3Function(spec) {\n    const wrappedFn = async function() {\n        const opts = getOptsFromArgs(arguments)\n        const speccedOpts = spec(this, opts)\n\n        return await sendTransactionAndGetResult(\n            getWeb3CallMetadata(arguments, opts, speccedOpts)\n        )\n    }\n\n    wrappedFn.estimateGas = async function() {\n        const opts = getOptsFromArgs(arguments)\n        const speccedOpts = spec(this, opts)\n        const { callerContract, methodName } = speccedOpts\n\n        if(opts.using === 'stats') {\n            return callerContract.gasStats[methodName].averageGasUsed\n        }\n\n        if(opts.using === 'rpc') {\n            const { methodArgs } = getWeb3CallMetadata(arguments, opts, speccedOpts)\n\n            let caller = callerContract\n            if (_.has(caller, 'deployed')) {\n                caller = await caller.deployed()\n            }\n\n            return await caller[methodName].estimateGas(...methodArgs)\n        }\n\n        throw new Error(`unsupported gas estimation source ${opts.using}`)\n    }\n\n    return wrappedFn\n}\n\n/**\n * Looks for a single event in the logs of a transaction result. If no such events or multiple matching events are found, throws an error. Otherwise returns the matching event log.\n *\n * @param {Transaction} result Result of sending a transaction\n * @param {string} eventName Name of the event\n * @return {Object} The matching event log found\n * @alias Gnosis.requireEventFromTXResult\n */\nexport function requireEventFromTXResult (result, eventName) {\n    let matchingLogs = _.filter(result.logs, (l) => l.event === eventName)\n\n    if (matchingLogs.length < 1) {\n        throw new Error(`could not find any logs in transaction ${result.tx} corresponding to event ${eventName}`)\n    } else if (matchingLogs.length > 1) {\n        throw new Error(`found too many logs in transaction ${result.tx} corresponding to event ${eventName}`)\n    }\n\n    return matchingLogs[0]\n}\n\nexport async function sendTransactionAndGetResult (opts) {\n    opts = opts || {}\n\n    let caller = opts.callerContract\n    if (_.has(caller, 'deployed')) {\n        caller = await caller.deployed()\n    }\n\n    let result = await caller[opts.methodName](...opts.methodArgs)\n    let matchingLog = requireEventFromTXResult(result, opts.eventName)\n\n    if(opts.resultContract == null)\n        return matchingLog.args[opts.eventArgName]\n    else\n        return await opts.resultContract.at(matchingLog.args[opts.eventArgName])\n}\n\n// I know bluebird does this, but it's heavy\n// Also, as of Node v8.5.0, `util.promisify` doesn't call the function with the same `this`\nexport function promisify (fn) {\n    return new Proxy(fn, {\n        apply: (target, thisArg, args) => {\n            return new Promise((resolve, reject) => {\n                let newArgs = Array.from(args)\n                newArgs.push((err, result) => {\n                    if (err != null) {\n                        reject(new Error(`${err}${result == null ? '' : ` (${result})`}`))\n                    } else {\n                        resolve(result)\n                    }\n                })\n                target.apply(thisArg, newArgs)\n            })\n        }\n    })\n}\n\nexport function promisifyAll (obj) {\n    _.functionsIn(obj).forEach((fnName) => {\n        let asyncFnName = fnName + 'Async'\n        if (!_.has(obj, asyncFnName)) {\n            obj[asyncFnName] = promisify(obj[fnName])\n        }\n    })\n    return obj\n}\n"]}